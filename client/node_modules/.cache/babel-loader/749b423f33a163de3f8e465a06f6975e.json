{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victus\\\\Desktop\\\\Node JS\\\\news-mern\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { auth, provider } from '../Firebase/firebase'; // Import Firebase setup\nimport { signInWithPopup } from 'firebase/auth'; // Import signInWithPopup from firebase/auth\nimport { useDispatch } from 'react-redux'; // Import useDispatch from react-redux\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport { FcGoogle } from 'react-icons/fc';\nimport { AUTH } from '../../constants/actionTypes';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // Replace useHistory with useNavigate\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n  };\n  const handleChange = e => setForm({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n  const googleSignIn = () => {\n    signInWithPopup(auth, provider).then(async result => {\n      const user = result.user;\n      console.log(user);\n      const token = await user.getIdToken(); // Get the token\n      const profile = {\n        name: user.displayName,\n        email: user.email,\n        picture: user.photoURL\n      };\n      try {\n        dispatch({\n          type: AUTH,\n          data: {\n            result: profile,\n            token\n          }\n        });\n        navigate('/');\n      } catch (error) {\n        console.log(error);\n      }\n    }).catch(error => {\n      console.log('Google Sign In was unsuccessful. Try again later');\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: 'white'\n    },\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"default\",\n    className: classes.googleButton,\n    onClick: googleSignIn,\n    startIcon: /*#__PURE__*/React.createElement(FcGoogle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 36\n      }\n    }),\n    style: {\n      backgroundColor: 'white',\n      color: '#3c4043',\n      textTransform: 'none',\n      borderColor: '#dadce0',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: '#d5d5d5'\n    },\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"))))));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","useStyles","Input","auth","provider","signInWithPopup","useDispatch","useNavigate","FcGoogle","AUTH","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","dispatch","navigate","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","console","log","handleChange","setForm","target","name","value","switchMode","prevIsSignup","googleSignIn","then","result","user","token","getIdToken","profile","displayName","picture","photoURL","type","data","error","catch","createElement","component","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","paper","elevation","avatar","style","color","variant","form","onSubmit","container","spacing","Fragment","label","autoFocus","half","fullWidth","submit","googleButton","onClick","startIcon","backgroundColor","textTransform","borderColor","borderRadius","justify","item"],"sources":["C:/Users/Victus/Desktop/Node JS/news-mern/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\nimport { auth, provider } from '../Firebase/firebase'; // Import Firebase setup\r\nimport { signInWithPopup } from 'firebase/auth'; // Import signInWithPopup from firebase/auth\r\nimport { useDispatch } from 'react-redux'; // Import useDispatch from react-redux\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { AUTH } from '../../constants/actionTypes';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\r\n\r\nconst Auth = () => {\r\n    const classes = useStyles();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const [formData, setFormData] = useState(initialState)\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate(); // Replace useHistory with useNavigate\r\n\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(formData)\r\n    };\r\n\r\n    const handleChange = (e) => setForm({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n        setShowPassword(false);\r\n    };\r\n\r\n    const googleSignIn = () => {\r\n        signInWithPopup(auth, provider)\r\n            .then(async (result) => {\r\n                const user = result.user;\r\n                console.log(user)\r\n                const token = await user.getIdToken(); // Get the token\r\n                const profile = {\r\n                    name: user.displayName,\r\n                    email: user.email,\r\n                    picture: user.photoURL,\r\n                };\r\n\r\n                try {\r\n                    dispatch({ type: AUTH, data: { result: profile, token } });\r\n\r\n                    navigate('/');\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('Google Sign In was unsuccessful. Try again later');\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography style={{ color: 'white' }} component=\"h1\" variant=\"h5\">\r\n                    {isSignup ? 'Sign up' : 'Sign in'}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {isSignup && (\r\n                            <>\r\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n                            </>\r\n                        )}\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        {isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        className={classes.googleButton}\r\n                        onClick={googleSignIn}\r\n                        startIcon={<FcGoogle />}\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            color: '#3c4043',\r\n                            textTransform: 'none',\r\n                            borderColor: '#dadce0',\r\n                            borderRadius: '5px',\r\n                        }}\r\n                    >\r\n                        Sign in with Google\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button style={{ color: '#d5d5d5' }} onClick={switchMode}>\r\n                                {isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}